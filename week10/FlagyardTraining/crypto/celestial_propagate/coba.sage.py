

# This file was *autogenerated* from the file coba.sage
from sage.all_cmdline import *   # import sage library

_sage_const_5 = Integer(5); _sage_const_1024 = Integer(1024); _sage_const_512 = Integer(512); _sage_const_20 = Integer(20); _sage_const_5000 = Integer(5000); _sage_const_2 = Integer(2); _sage_const_1 = Integer(1); _sage_const_0 = Integer(0); _sage_const_100 = Integer(100)# from sage.all import matrix, ZZ, Primes
import random

n = _sage_const_5 

list_pub = [random.getrandbits(_sage_const_1024 ) for _ in range(n)]
list_pub2 = [random.getrandbits(_sage_const_1024 ) for _ in range(n)]
list_priv = [random.getrandbits(_sage_const_512 ) for _ in range(n)]

sumer = sum([i*j for i,j in zip(list_pub,list_priv)])
sumer2 = sum([i*j for i,j in zip(list_pub2,list_priv)])

print(sumer)

for jk in range(_sage_const_20 , _sage_const_5000 ):
    scale = _sage_const_2 **jk
    # P = Primes()
    # scale = 2**1024
    mat = matrix(n+_sage_const_1 , n+_sage_const_1 )
    for i in range(n):
        mat[i,i] = _sage_const_1 
        mat[i, -_sage_const_1 ] = scale*list_pub[i]
    mat[-_sage_const_1 , -_sage_const_1 ] = scale * -sumer
    mat[-_sage_const_1 , -_sage_const_2 ] = _sage_const_1 *_sage_const_2 **_sage_const_512 
    # mat = [
    #     [1, 0, 0, 0, 0, 0,        scale * list_pub[0], scale * list_pub2[0]],
    #     [0, 1, 0, 0, 0, 0,        scale * list_pub[1], scale * list_pub2[1]],
    #     [0, 0, 1, 0, 0, 0,        scale * list_pub[2], scale * list_pub2[2]],
    #     [0, 0, 0, 1, 0, 0,        scale * list_pub[3], scale * list_pub2[3]],
    #     [0, 0, 0, 0, 1, 0,        scale * list_pub[4], scale * list_pub2[4]],
    #     [0, 0, 0, 0, 0, 1 * 2^512, scale * -sumer,     scale * -sumer2   ],
    # ]
    # mat = matrix(ZZ, mat).LLL()
    # print(mat)

    hasil = mat.LLL()
    # print(hasil)
    # break
    for i in hasil:
        if(i[-_sage_const_1 ]==_sage_const_0  and i[-_sage_const_2 ]%_sage_const_2 **_sage_const_100 ==_sage_const_0 ): 
            print(i)
            print("FOUND")
            print(list_priv)
            # exit(1)

